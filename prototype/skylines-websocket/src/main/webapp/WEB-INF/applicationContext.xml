<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <context:annotation-config/>
    <context:component-scan base-package="patricksongzy.skylines.websocket"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <bean id="sessions" class="java.util.concurrent.ConcurrentHashMap"/>
    <bean id="org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor" class="org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor"/>
    <bean id="org.springframework.kafka.config.internalKafkaListenerEndpointRegistry" class="org.springframework.kafka.config.KafkaListenerEndpointRegistry"/>
    <bean id="consumerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="kafka:29092"/>
                <entry key="group.id" value="skylines-websocket"/>
                <entry key="auto.offset.reset" value="latest"/>
                <entry key="max.poll.interval.ms" value="500"/>
                <entry key="max.poll.records" value="100"/>
                <entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
                <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
            </map>
        </constructor-arg>
    </bean>
    <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg ref="consumerProperties"/>
    </bean>
    <bean id="kafkaListenerContainerFactory" class="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory">
        <property name="consumerFactory" ref="consumerFactory"/>
        <property name="batchListener" value="true"/>
    </bean>
</beans>